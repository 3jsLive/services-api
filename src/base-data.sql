BEGIN TRANSACTION;
INSERT INTO "machines" ("machineId","info") VALUES (1,'Azure');
INSERT INTO "tests" ("testId","group","name","description","text","available","flaky") VALUES (1,'checks','DocsDecl','Docs vs. Declaration','Parse the documentation and compare it against the declaration files',1,0),
 (2,'checks','SrcDecl','Source vs. Declaration','Scan certain source files for differences with the declaration files',1,0),
 (3,'checks','ObjDecl','Objects vs. Declaration','Try and instantiate objects and then compare their properties and methods with the declaration files',1,0),
 (4,'checks','TSCompiler','Test with TypeScript compiler','Let the TypeScript compiler check all Javascript and TypeScript files for type- and other errors',1,0),
 (5,'checks','DocsExamples','Scan Docs for broken example links','Search for broken <code>[example:....]</code> links in the documentation',1,0),
 (6,'checks','DocsExternals','Scan Docs for broken external links','Search for <code>[link:...]</code> tags with outdated target URLs',1,1),
 (7,'checks','NonDocsExternals','Scan Non-Docs for broken external links','Search other HTML and JavaScript files for references to broken URLs',1,1),
 (8,'linters','DoobsDoc','DoobsDoc linting','Lint the custom tags used in the doc files',1,0),
 (9,'linters','HTMLLint','HTML linting','Lint all HTML pages, i.e. examples and docs',1,0),
 (10,'linters','StyleLint','StyleLint (CSS)','Lint any CSS styles, both embedded and stand-alone',0,0),
 (11,'linters','ESLintJsFiles','ESLint (JavaScript, stand-alone files)','Lint all *.js files',1,0),
 (12,'linters','ESLintTsFiles','ESLint (TypeScript)','Lint all *.d.ts files',1,0),
 (13,'linters','glslang','glsl Validator','Lint all extracted shaders (needs dependencies or profiler to run first)',0,0),
 (14,'notifiers','CheckNPM','Check NPM for outdated dependencies','Query the NPM registry for available updates to the dependencies',0,0),
 (15,'notifiers','ScanLegacy','Scan for Three.Legacy.js references','Scan for files still importing code from Three.Legacy.js',0,0),
 (16,'type search','TypeCore','Core','Examine encountered types in the core source files',0,0),
 (17,'type search','TypeExamples','Examples','Examine encountered types in the examples',0,0),
 (18,'profiling','ProfTraces','Traces','Code tracing',0,0),
 (19,'profiling','ProfStats','Stats','Various stats taken from examples (e.g. FPS, memory)',0,0),
 (20,'profiling','ProfVisual','Visual','Test for visual regressions',0,0),
 (21,'profiling','ProfConsole','Console','Examine the console output of examples',0,0),
 (22,'dependencies','DocsDocsDeps','Dependencies between doc pages','Verify that all references to other doc pages have a valid target',1,0),
 (23,'dependencies','DocsSrcDeps','Dependencies between docs and source','Verify that all references between docs and sources match',0,0),
 (24,'dependencies','SrcSrcDeps','Dependencies between source files','Verify that all references between source files are valid (e.g. properties called)',0,0),
 (25,'linters','ESLintScriptTags','ESLint (JavaScript, <script> elements)','Lint JavaScript embedded in script tags in HTML files',1,0),
 (26,'linters','ESLintCodeTags','ESLint (JavaScript, <code> elements)','Lint JavaScript inside code tags in the docs',1,0),
 (27,'checks','ScanCompletion','Orphaned pages','Scan for orphaned examples or docs',0,0),
 (28,'checks','UnitTests','Run the unit tests','Run the unit tests via a headless browser and return the number of failed tests',1,0),
 (29,'dependencies','RuntimeDeps','Dependencies of examples','Run the examples and trace all requested data files, shaders, etc.',0,0),
 (30,'checks','CompSrcExp','Compare source exports','Compare the exports of JS and TS source files',1,0),
 (31,'checks','CompExmplsExp','Compare examples exports','Compare the exports of JS and TS examples files',1,0),
 (32,'profiling','LawVsReality','Laws vs Reality','Collects all recorded parameter types and compares them to the declaration files',1,0);
COMMIT;
